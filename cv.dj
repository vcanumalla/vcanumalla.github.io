# Zachary Tatlock

`ztatlock@cs.washington.edu`

`https://ztatlock.net`

## Experience

- *University of Washington, Seattle, WA* \
  Paul G. Allen School of Computer Science & Engineering \
  Associate Professor, Autumn 2019 – Present \
  Assistant Professor, Autumn 2014 – Autumn 2019 \
  Acting Assistant Professor, Autumn 2013 – Autumn 2014

- *Amazon Web Services, Seattle, WA* \
  Automated Reasoning Group \
  Amazon Scholar, Autumn 2021 – Present

- *OctoML, Seattle, WA* \
  Compiler Design and Implementation Group \
  Advisor, Autumn 2019 – Spring 2021

- *Microsoft Research India, Bengaluru, India* \
  Systems Research Group \
  Graduate Research Intern, Summer 2010

## Education

- *University of California, San Diego, CA* \
  PhD, Computer Science & Engineering, Autumn 2014 \
  Thesis: Reducing the Costs of Proof Assistant Based Formal Verification \
  Advisor: Sorin Lerner

- *Purdue University, West Lafayette, IN* \
  BS, Computer Science (Honors), Spring 2007 \
  BS, Mathematics, Spring 2007 \
  Advisor: Suresh Jagannathan

## Students

### _Current Students_

- Max Willsey, Postdoctoral Scholar
- Gus Smith, PhD Student
- Amy Zhu, PhD Student
- Anjali Pal, PhD Student
- Yihong Zhang, PhD Student
- Oliver Flatt, PhD Student
- Kevin Mu, PhD Student
- Brett Saiki, MS Student
- Andrew Cheung, MS Student
- Cynthia Richey, MS Student
- Vishal Canumalla, BS Student
- Caleb Chan, BS Student
- Ryan Tjoa, BS Student
- Aditya Akhileshwaran, BS Student
- Varun Pradeep, BS Student
- Zhiyuan Yan, BS Student

### _Graduated Doctoral Students_

- Steven Lyubomirsky, PhD 2022

  * Thesis: Compiler and Runtime Techniques for Optimizing Deep Learning Applications
  * Senior Machine Learning Systems Engineer at OctoML

- Chandrakana Nandi, PhD 2021

  * Thesis: Programming Language Tools and Techniques for Computational Fabrication
  * Principal Researcher at Certora

- Bill Zorn, PhD 2021

  * Thesis: Rounding
  * Numerical Hardware Architect at Intel

- James Wilcox, PhD 2021

  * Thesis: Compositional and Automated Verification of Distributed Systems
  * CTO at Certora (2019)
  * Assistant Teaching Professor at the University of Washington (2022)

- Jared Roesch, PhD 2020

  * Thesis: Principled Optimization Of Dynamic Neural Networks
  * Co-founder and CTO at OctoML

- Pavel Panchekha, PhD 2019

  * Thesis: Automated Reasoning for Web Page Layout
  * Assistant Professor at the University of Utah

- Doug Woos, PhD 2019

  * Thesis: A Step-through Debugger for Distributed Systems
  * Lecturer at Brown University

- Stuart Pernsteiner, PhD 2018

  * Thesis: Practical Verification of Safety-Critical Systems
  * Research & Engineering at Galois

- Eric Mullen, PhD 2018

  * Thesis: Pushing the Limits of Compiler Verification
  * Google

- Konstantin Weitz, PhD 2017

  * Thesis: Formal Semantics and Scalable Verification for the Border Gateway Protocol using Proof Assistants and SMT Solvers
  * Google
  * Co-founder at Nexus

### _Graduated Masters Students_

- Yihong Zhang, MS 2022

  * PhD Student at the University of Washington

- Marisa Kirisame, MS 2020

  * PhD Student at the University of Utah

- Logan Weber, MS 2020

  * PhD Student at MIT

- Alex Sanchez-Stern, MS 2015

  * PhD Student at UC San Diego

### _Graduated Bachelors Students_

- Brett Saiki, BS 2023

  * MS Student at the University of Washington

- Andrew Cheung, BS 2023

  * MS Student at the University of Washington

- Cynthia Richey, BS 2023

  * MS Student at the University of Washington

- Andrew Liu, BS 2023

  * Jane Street Capital

- Mike He, BS 2022

  * PhD Student at Princeton University

- Yihong Zhang, BS 2021

  * MS Student at the University of Washington

- Adam Anderson, BS 2021

- Taylor Blau, BS 2020

  * GitHub

- Josh Pollock, BS 2020

  * PhD Student at MIT

- Altan Haan, BS 2020

  * PhD Student at UC Berkeley

- Marisa Kirisame, BS 2019

  * MS Student at the University of Washington

- Logan Weber, BS 2019

  * MS Student at the University of Washington

- Jifan Zhang, BS 2019

  * PhD Student at the University of Wisconsin

- David Thien, BS 2019

  * PhD Student at UC San Diego

- Paul Curry, BS 2018

  * Xnor.ai
  * Apple

- Melissa Hovik, BS 2018

  * Instructor at the California Institute of Technology

- Justin Adsuara, BS 2018

  * Hilton Hotels

- Chen Qiu, BS 2018

  * Facebook

- Adam Geller, BS 2018

  * PhD Student at the University of British Columbia

- Steve Anton, BS 2017

  * Google

- Ryan Doenges, BS 2017

  * PhD Student at Cornell University

- Miranda Edwards, BS 2017

  * Cisco Meraki

- Luke Nelson, BS 2017

  * PhD Student at the University of Washington

- Keith Simmons, BS 2017

  * Microsoft

- Seth Pendergrass, BS 2016

  * Microsoft
  * Oculus VR

- Daryl Zuniga, BS 2015

  * Microsoft

- Alex Sanchez-Stern, BS 2014

  * MS Student at the University of Washington


### _Visiting Summer Students_

- David Cao, BS, Summer 2022

  * PhD Student at UC Berkeley

- Oliver Flatt, BS, Summer 2021

  * PhD Student at the University of Washington

- Grace Oh, HS, Summer 2020

  * BS Student at Princeton University

- Adam Anderson, HS, Summer 2018

  * BS Student at the University of Washington

- Juliet Oh, HS, Summer 2016

  * BS Student at Princeton University


## Publications

### _Conference and Journal Papers_

{.pubs}
:::

*Better Together: Unifying Datalog and Equality Saturation* \
Yihong Zhang, Yisu Remy Wang, Oliver Flatt, David Cao, Philip Zucker, Eli Rosenthal, Zachary Tatlock, Max Willsey \
Programming Language Design and Implementation (PLDI) 2023

*babble: Learning Better Abstractions with E-Graphs and Anti-Unification* \
David Cao, Rose Kunkel, Chandrakana Nandi, Max Willsey, Zachary Tatlock, Nadia Polikarpova \
Principles of Programming Languages (POPL) 2023

*Small Proofs from Congruence Closure* \
Oliver Flatt, Samuel Coward, Max Willsey, Zachary Tatlock, Pavel Panchekha \
Formal Methods in Computer-Aided Design (FMCAD) 2022

*Verified Compilation and Optimization of Floating-Point Programs in CakeML* \
Heiko Becker, Robert Rabe, Eva Darulova, Magnus O. Myreen, Zachary Tatlock, Ramana Kumar, Yong Kiam Tan, Anthony Fox \
European Conference on Object-Oriented Programming (ECOOP) 2022

*Co-Optimization of Design and Fabrication Plans for Carpentry* \
Haisen Zhao, Max Willsey, Amy Zhu, Chandrakana Nandi, Zachary Tatlock, Justin Solomon, Adriana Schulz \
ACM Transactions on Graphics (TOG) 2022

*Relational e-matching* \
Yihong Zhang, Yisu Remy Wang, Max Willsey, Zachary Tatlock \
Principles of Programming Languages (POPL) 2022

*Rewrite Rule Inference Using Equality Saturation* \
Chandrakana Nandi, Max Willsey, Amy Zhu, Yisu Remy Wang, Brett Saiki, Adam Anderson, Adriana Schulz, Dan Grossman, Zachary Tatlock \
Object-Oriented Programming, Systems, Languages & Applications (OOPSLA) 2021 \
★ Distinguished Paper

*A Roadmap Towards Parallel Printing for Desktop 3D Printers* \
Molly Aubrey Carton, Chandrakana Nandi, Adam Anderson, Haisen Zhao, Eva Darulova, Dan Grossman, Jeffrey I. Lipton, Adriana Schulz, Zachary Tatlock \
Solid Freeform Fabrication Symposium (SFF) 2021

*Combining Precision Tuning and Rewriting* \
Brett Saiki, Oliver Flatt, Chandrakana Nandi, Pavel Panchekha, Zachary Tatlock \
IEEE International Symposium on Computer Arithmetic (ARITH) 2021

*Pure Tensor Program Rewriting via Access Patterns* \
Gus Henry Smith, Andrew Liu, Steven Lyubomirsky, Scott Davidson, Joseph McMahan, Michael Taylor, Luis Ceze, Zachary Tatlock \
Symposium on Machine Programming (MAPS) 2021

*Dynamic Tensor Rematerialization* \
Marisa Kirisame, Steven Lyubomirsky, Altan Haan, Jennifer Brennan, Mike He, Jared Roesch, Tianqi Chen, Zachary Tatlock \
International Conference on Learning Representations (ICLR) 2021 \
★ Spotlight Paper

*Nimble: Efficiently Compiling Dynamic Neural Networks for Model Inference* \
Haichen Shen, Jared Roesch, Zhi Chen, Wei Chen, Yong Wu, Mu Li, Vin Sharma, Zachary Tatlock, Yida Wang \
Conference on Machine Learning and Systems (MLSys) 2021

*egg: Fast and Extensible Equality Saturation* \
Max Willsey, Chandrakana Nandi, Yisu Remy Wang, Oliver Flatt, Zachary Tatlock, Pavel Panchekha \
Principles of Programming Languages (POPL) 2021 \
★ Distinguished Paper

*Synthesizing Structured CAD Models with Equality Saturation and Inverse Transformations* \
Chandrakana Nandi, Max Willsey, Adam Anderson, James R. Wilcox, Eva Darulova, Dan Grossman, Zachary Tatlock \
Programming Language Design and Implementation (PLDI) 2020

*Carpentry Compiler* \
Chenming Wu, Haisen Zhao, Chandrakana Nandi, Jeffrey I. Lipton, Zachary Tatlock, Adriana Schulz \
SIGGRAPH Asia, ACM Transactions on Graphics (SIGA) 2019

*Modular Verification of Web Page Layout* \
Pavel Panchekha, Michael D. Ernst, Zachary Tatlock, Shoaib Kamil \
Object-Oriented Programming, Systems, Languages & Applications (OOPSLA) 2019

*QED at Large: A Survey of Engineering of Formally Verified Software* \
Talia Ringer, Karl Palmskog, Ilya Sergey, Milos Gligoric, Zachary Tatlock \
Foundations and Trends in Programming Languages (FTPL) 2019

*Icing: Supporting Fast-Math Style Optimizations in a Verified Compiler* \
Heiko Becker, Eva Darulova, Magnus O. Myreen, Zachary Tatlock \
Computer-Aided Verification (CAV) 2019

*Teaching Rigorous Distributed Systems With Efficient Model Checking* \
Ellis Michael, Doug Woos, Thomas E. Anderson, Michael D. Ernst, Zachary Tatlock \
European Conference on Computer Systems (EuroSys) 2019

*Sinking Point: Dynamic Precision Tracking for Floating-Point* \
Bill Zorn, Dan Grossman, Zachary Tatlock \
Conference for Next Generation Arithmetic (CoNGA) 2019

*Functional Programming for Compiling and Decompiling Computer-aided Design* \
Chandrakana Nandi, James R. Wilcox, Pavel Panchekha, Taylor Blau, Dan Grossman, Zachary Tatlock \
International Conference on Functional Programming (ICFP) 2018

*Combining Tools for Optimization and Analysis of Floating-Point Computations* \
Heiko Becker, Pavel Panchekha, Eva Darulova, Zachary Tatlock \
Formal Methods (FM) 2018

*Software Verification with ITPs Should Use Binary Code Extraction to Reduce the TCB* \
Ramana Kumar, Eric Mullen, Zachary Tatlock, Magnus O. Myreen \
Interactive Theorem Proving (ITP) 2018

*Relay: a New IR for Machine Learning Frameworks* \
Jared Roesch, Steven Lyubomirsky, Logan Weber, Josh Pollock, Marisa Kirisame, Tianqi Chen, Zachary Tatlock \
Machine Learning and Programming Languages (MAPL) 2018

*Finding Root Causes of Floating Point Error* \
Alex Sanchez-Stern, Pavel Panchekha, Sorin Lerner, Zachary Tatlock \
Programming Language Design and Implementation (PLDI) 2018

*Verifying that Web Pages have Accessible Layout* \
Pavel Panchekha, Adam T. Geller, Michael D. Ernst, Zachary Tatlock, Shoaib Kamil \
Programming Language Design and Implementation (PLDI) 2018

*Programming and Proving with Distributed Protocols* \
Ilya Sergey, James R. Wilcox, Zachary Tatlock \
Principles of Programming Languages (POPL) 2018

*Œuf: Minimizing the Coq Extraction TCB* \
Eric Mullen, Stuart Pernsteiner, James R. Wilcox, Zachary Tatlock, Dan Grossman \
Certified Programs and Proofs (CPP) 2018

*Automatic Formal Verification for EPICS* \
Jonathan Jacky, Stefani Banerian, Michael D. Ernst, Calvin Loncaric, Stuart Pernsteiner, Zachary Tatlock, Emina Torlak \
International Conference on Accelerator and Large Experimental Control Systems (ICALEPCS) 2017

*SpaceSearch: A Library for Building and Verifying Solver-aided Tools* \
Konstantin Weitz, Steven Lyubomirsky, Stefan Heule, Emina Torlak, Michael D. Ernst, Zachary Tatlock \
International Conference on Functional Programming (ICFP) 2017

*Programming Language Abstractions for Modularly Verified Distributed Systems* \
James R. Wilcox, Ilya Sergey, Zachary Tatlock \
Summit oN Advances in Programming Languages (SNAPL) 2017

*Programming Language Tools and Techniques for 3D Printing* \
Chandrakana Nandi, Anat Caspi, Dan Grossman, Zachary Tatlock \
Summit oN Advances in Programming Languages (SNAPL) 2017

*Scalable Verification of Border Gateway Protocol Configurations with an SMT Solver* \
Konstantin Weitz, Doug Woos, Emina Torlak, Michael D. Ernst, Arvind Krishnamurthy, Zachary Tatlock \
Object-Oriented Programming, Systems, Languages & Applications (OOPSLA) 2016

*Formal Semantics and Automated Verification for the Border Gateway Protocol* \
Konstantin Weitz, Doug Woos, Emina Torlak, Michael D. Ernst, Arvind Krishnamurthy, Zachary Tatlock \
ACM SIGCOMM Workshop on Networking and Programming Languages (NetPL) 2016

*Investigating Safety of a Radiotherapy Machine Using System Models with Pluggable Checkers* \
Stuart Pernsteiner, Calvin Loncaric, Emina Torlak, Zachary Tatlock, Xi Wang, Michael D. Ernst, Jonathan Jacky \
Computer-Aided Verification (CAV) 2016

*Verified Peephole Optimizations for CompCert* \
Eric Mullen, Daryl Zuniga, Zachary Tatlock, Dan Grossman \
Programming Language Design and Implementation (PLDI) 2016

*Planning for Change in a Formal Verification of the Raft Consensus Protocol* \
Doug Woos, James R. Wilcox, Steve Anton, Zachary Tatlock, Michael D. Ernst, Thomas E. Anderson \
Certified Programs and Proofs (CPP) 2016

*Verdi: A Framework for Implementing and Formally Verifying Distributed Systems* \
James R. Wilcox, Doug Woos, Pavel Panchekha, Zachary Tatlock, Xi Wang, Michael D. Ernst, Thomas E. Anderson \
Programming Language Design and Implementation (PLDI) 2015

*Automatically Improving Accuracy for Floating Point Expressions* \
Pavel Panchekha, Alex Sanchez-Stern, James R. Wilcox, Zachary Tatlock \
Programming Language Design and Implementation (PLDI) 2015 \
★ Distinguished Paper

*RoboFlow: A Flow-based Visual Programming Language for Mobile Manipulation Tasks* \
Sonya Alexandrova, Zachary Tatlock, Maya Cakmak \
International Conference on Robotics and Automation (ICRA) 2015

*Toward a Dependability Case Language and Workflow for a Radiation Therapy System* \
Michael D. Ernst, Dan Grossman, Jonathan Jacky, Calvin Loncaric, Stuart Pernsteiner, Zachary Tatlock, Emina Torlak, Xi Wang \
Summit oN Advances in Programming Languages (SNAPL) 2015

*Visual Robot Programming for Generalizable Mobile Manipulation Tasks* \
Sonya Alexandrova, Zachary Tatlock, Maya Cakmak \
Human Robot Interaction (HRI) 2015

*Jitk: A Trustworthy In-Kernel Interpreter Infrastructure* \
Xi Wang, David Lazar, Nickolai Zeldovich, Adam Chlipala, Zachary Tatlock \
Operating Systems Design and Implementation (OSDI) 2014

*Automating Formal Proofs for Reactive Systems* \
Daniel Ricketts, Valentin Robert, Dongseok Jang, Zachary Tatlock, Sorin Lerner \
Programming Language Design and Implementation (PLDI) 2014

*SafeDispatch: Securing C++ Virtual Calls from Memory Corruption Attacks* \
Dongseok Jang, Zachary Tatlock, Sorin Lerner \
Network and Distributed System Security (NDSS) 2014

*Establishing Browser Security Guarantees through Formal Shim Verification* \
Dongseok Jang, Zachary Tatlock, Sorin Lerner \
USENIX Security Symposium (SECURITY) 2012

*Equality Saturation: A New Approach to Optimization* \
Ross Tate, Michael Stepp, Zachary Tatlock, Sorin Lerner \
Logical Methods in Computer Science (LMCS) 2011

*Bringing Extensibility to Verified Compilers* \
Zachary Tatlock, Sorin Lerner \
Programming Language Design and Implementation (PLDI) 2010

*Proving Optimizations Correct using Parameterized Program Equivalence* \
Sudipta Kundu, Zachary Tatlock, Sorin Lerner \
Programming Language Design and Implementation (PLDI) 2009

*Equality Saturation: A New Approach to Optimization* \
Ross Tate, Michael Stepp, Zachary Tatlock, Sorin Lerner \
Principles of Programming Languages (POPL) 2009

*Deep Typechecking and Refactoring* \
Zachary Tatlock, Chris Tucker, David Shuffelton, Ranjit Jhala, Sorin Lerner \
Object-Oriented Programming, Systems, Languages & Applications (OOPSLA) 2008

:::

### _Workshop Papers_

{.pubs}
:::

*Generate Compilers from Hardware Models!* \
Gus Henry Smith, Ben Kushigian, Vishal Canumalla, Andrew Cheung, René Just, Zachary Tatlock \
Workshop on Programming Languages and Computer Architecture (PLARCH) 2023

*Guarding Numerics Amidst Rising Heterogeneity* \
Ganesh Gopalakrishnan, Ignacio Laguna, Ang Li, Pavel Panchekha, Cindy Rubio-González, Zachary Tatlock \
Software Correctness for HPC Applications (CORRECTNESS) 2021

*From DSLs to Accelerator-Rich Platform Implementations: Addressing the Mapping Gap* \
Bo-Yuan Huang, Steven Lyubomirsky, Thierry Tambe, Yi Li, Mike He, Gus Henry Smith, Gu-Yeon Wei, Aarti Gupta, Sharad Malik, Zachary Tatlock \
Workshop on Languages, Tools, and Techniques for Accelerator Design (LATTE) 2021

*The Essence of Program Semantics Visualizers: A Three-Axis Model* \
Josh Pollock, Grace Oh, Eunice Jun, Philip J. Guo, Zachary Tatlock \
Workshop on Evaluation and Usability of Programming Languages and Tools (PLATEAU) 2020 \

*Towards Numerical Assistants* \
Pavel Panchekha, Zachary Tatlock \
Numerical Software Verification (NSV) 2020

*Toward Multi-Precision, Multi-Format Numerics* \
David Thien, Bill Zorn, Pavel Panchekha, Zachary Tatlock \
Software Correctness for HPC Applications (CORRECTNESS) 2019

*Theia: Automatically Generating Correct Program State Visualizations* \
Josh Pollock, Jared Roesch, Doug Woos, Zachary Tatlock \
ACM SIGPLAN International Symposium on SPLASH-E (SPLASH-E) 2019

*Verification of Implementations of Distributed Systems Under Churn* \
Ryan Doenges, James R. Wilcox, Doug Woos, Zachary Tatlock, Karl Palmskog \
Workshop on Coq for Programming Languages (CoqPL) 2017

*Toward a Standard Benchmark Format and Suite for Floating-Point Analysis* \
Nasrine Damouche, Matthieu Martel, Pavel Panchekha, Chen Qiu, Alex Sanchez-Stern, Zachary Tatlock \
Numerical Software Verification (NSV) 2016

*Peek: A Formally Verified Peephole Optimization Framework for x86* \
Eric Mullen, Zachary Tatlock, Dan Grossman \
Workshop on Coq for Programming Languages (CoqPL) 2015

:::

### _Book Chapters_

{.pubs}
:::

*Chapter 8: Parameterized Program Equivalence Checking* \
High-Level Verification: Methods and Tools for Verification of System-Level Designs \
Sudipta Kundu, Sorin Lerner, and Rajesh K. Gupta; Springer 2011

:::

## Teaching

### _Instructor_

- *UW CSE 505: Concepts of Programming Languages* \
  Graduate course
  using proof assistants to explore
  transition systems,
  inductive invariants,
  type systems,
  Hoare logic,
  metatheory

  {.columns .columns-8rem}
  *  2023 Winter
  *  2021 Spring
  *  2020 Spring
  *  2019 Spring
  *  2018 Autumn
  *  2017 Autumn
  *  2016 Autumn
  *  2015 Autumn
  *  2015 Winter
  *  2013 Autumn

- *UW CSE 341: Programming Languages* \
  Undergraduate course exploring
  informal operational semantics,
  functional programming vs. OOP,
  static vs. dynamic typing

  {.columns .columns-8rem}
  *  2022 Autumn
  *  2021 Winter
  *  2020 Winter
  *  2019 Winter
  *  2018 Winter
  *  2015 Spring
  *  2014 Spring

- *UW CSE 331: Software Design and Implementation* \
  Undergraduate course exploring
  specification,
  invariants,
  testing,
  debugging,
  modular design

  {.columns .columns-8rem}
  *  2018 Spring
  *  2017 Winter
  *  2016 Winter

- *Special Topics Graduate Courses*

  * UW CSE 599Z: Accurate Computing, \ 2017\ Spring

    - Numerical computing and computational fabrication

  * UW CSE 599W: Systems Verification, \ 2016\ Spring

    - Formally verifying systems implementations
    - Co-taught with Xi Wang and Bryan Parno

  * UW CSE 506: Advanced Topics in Programming Languages, \ 2014\ Winter

    - Proof assistants, dependent types, and systems verificiation

★ \ I was honored to be nominated for
    the UW Distinguished Teaching Award in 2015.

### _Summer School Courses_

- *DeepSpec Summer School 2018* \
  Verifying Distributed Systems Implementations in Coq

### _Teaching Assistant_

- *UCSD CSE 231: Advanced Compiler Design* \
  Graduate course exploring
  program analyses and
  compiler optimizations

  {.columns .columns-8rem}
  *  2012 Autumn
  *  2011 Autumn
  *  2011 Spring

- *UCSD CSE 130: Programming Languages* \
  Undergraduate course exploring
  functional programming,
  static vs. dynamic typing, and
  logic programming

  {.columns .columns-8rem}
  *  2012 Winter

- *Purdue CS 180: Introduction to Java Programming* \
  Undergraduate course introducing students to Java programming:
  variables,
  conditionals,
  loops,
  recursion,
  testing,
  modular design, and
  basic systems programming

  {.columns .columns-8rem}
  *  2007 Spring
  *  2006 Autumn
  *  2006 Spring
  *  2005 Autumn
  *  2005 Spring
  *  2004 Autumn
  *  2004 Spring

## Awards

* Distinguished Paper Award for "Rewrite Rule Inference Using Equality Saturation" \
  ACM SIGPLAN Object-Oriented Programming, Systems, Languages & Applications (OOPSLA) 2021

* Spotlight Papaer Award for "Dynamic Tensor Rematerialization" \
  International Conference on Learning Representations (ICLR) 2021

* Distinguished Paper Award for "egg: Fast and Extensible Equality Saturation" \
  ACM SIGPLAN Principles of Programming Languages (POPL) 2021

* Faculty Appreciation for Career Education & Training (FACET) Award \
  University of Washington, 2020

* NSF CAREER Award: Verifying Distributed System Implementations \
  National Science Foundation, 2017

* Distinguished Paper Award for "Automatically Improving Accuracy for Floating Point Expressions" \
  ACM SIGPLAN Programming Language Design and Implementation (PLDI) 2015

* Distinguished Teaching Award Nomination \
  University of Washington, 2015

## Invited Talks

* The egg Equality Saturation Toolkit \
  UIUC, Compilers Seminar, May 2023

* The egg Equality Saturation Toolkit \
  UC San Diego, Databases Seminar, March 2023

* The egg Equality Saturation Toolkit \
  ETH Workshop on Dependable and Secure Software Systems, October 2022

* Programming Languages for the Next Manufacturing Revolution \
  Department of Energy, July 2022

* Towards Optimizing Multi-precision, Multi-format Numerical Codes \
  Intel ARITH, October 2020

* Synthesizing Backward through the Geometry Pipeline \
  University of Wisconsin, PL Seminar, August 2020

* Towards Numerical Assistants \
  Numerical Software Verification @ CAV, July 2020

* TVM Relay: A Functional IR for Analysis and Optimization \
  TVM Conference, May 2019

* Synthesis of Floating Point Programs and Beyond \
  Synthetic Minds, September 2019

* Verifying Implementations of Distributed Systems \
  Galois Inc., September 2018

* Formally Verifying Implementations of Distributed Systems \
  Princeton University, DeepSpec Summer School, July 2018

* Formally Verifying Implementations of Distributed Systems \
  Oxford University, Coq Workshop at FLOC, July 2018

* Navigating Your Career Path \
  Programming Languages Mentoring Workshop (PLMW), June 2018

* The FPBench Suite and Specification \
  Dagstuhl on Analysis and Synthesis of Floating-point Programs, August 2017

* Automatically Improving the Accuracy of Floating Point Expressions \
  Max Planck Institute (MPI-SWS Saarbrüken), August 2017

* Verifying Control Plane Policies in BGP \
  Mathematical Foundations of Programming Semantics (MFPS), June 2017

* Automated Formal Verification for Border Gateway Protocol Configurations \
  Purdue University, April 2017

* Automatically Improving the Accuracy of Floating Point Expressions \
  University of Utah, February 2017

* Dijkstra and De Millo: Challenges in Applying and Teaching Verification \
  Microsoft Research Faculty Summit, July 2016

* Verifying Safety Cases for Radiotherapy Control \
  Verified Software: Theories, Tools, and Experiments (VSTTE), June 2016

## Service

### _Reviewing_

- 2023 ARITH Program Committee
- 2023 ASPLOS External Review Committee
- 2023 NSF Grant Review Panel
- 2023 PLDI Program Committee
- 2022 ARITH Program Committee
- 2021 PLDI Program Committee
- 2021 ASPLOS Program Committee
- 2020 SCF External Reviewer
- 2020 OOPSLA External Review Committee
- 2020 PLDI External Program Committee
- 2020 ASPLOS Program Committee
- 2019 CPP Program Committee
- 2019 PLDI Program Committee
- 2019 ICFP External Review Committee
- 2018 ITP Program Committee
- 2018 TOPLAS Referee
- 2018 POPL Program Committee
- 2017 Onward! Program Committee
- 2017 ASPLOS External Reviewer
- 2017 POPL External Reviewer
- 2016 PLDI Program Committee
- 2016 PLDI Artifact Evaluation Committee Co-Chair
- 2016 CPP Program Committee
- 2016 ASPLOS External Review Committee
- 2016 POPL External Review Committee
- 2015 CoqPL Program Committee
- 2015 POPL External Review Committee
- 2014 OOPSLA External Review Committee
- 2014 PLDI External Review Committee
- 2009 CC External Reviewer

### _Organizing_

- 2024 PLDI Workshops Co-chair
- 2023 FPTalks Co-Organizer
- 2023 EGRAPHS Workshop Co-Organizer
- 2023 PNW PLSE Co-Organizer
- 2023 PLDI Workshops Co-chair
- 2022 FPTalks Co-Organizer
- 2022 ISCSA Tutorial: Generalizing the ISA to the ILA Co-Organizer
- 2022 EGRAPHS Workshop Co-Organizer
- 2022 PLDI Tutorial: Build Your Optimizer with egg Co-Organizer
- 2021 FPTalks Co-Organizer
- 2020 SRC JUMP: Applications Driving Architectures (ADA) Student Hackathon Organizer
- 2020 FPTalks Co-Organizer
- 2019 SRC JUMP: Applications Driving Architectures (ADA) Student Hackathon Organizer
- 2019 University of Washington Verification in Practice (ViP) Co-Organizer
- 2018 PNW PLSE Organizer
- 2015 CoqPL Workshop Co-Organizer

### _Mentoring_

- 2018 PLDI Programming Languages Mentoring Workshop (PLMW) Panelist
- 2018 POPL Programming Languages Mentoring Workshop (PLMW) Panelist
- 2017 UW NSF STARS Mentor
- 2017 SPLASH Doctoral Symposium Program Committee
- 2016 POPL Student Research Competition (SRC) Organizer
- 2015 SPLASH Programming Languages Mentoring Workshop (PLMW) Co-Chair
- 2015 PLDI Student Research Competition (SRC) Committee
- 2014 SPLASH Inspirations Co-Organizer and Speaker

### _Department_

- 2022 - 2024 : UW CSE Faculty Recruiting Co-chair
- 2020 - 2021 : UW CSE Undergraduate Admissions Committee
- 2019 - 2020 : UW CSE Diversity Committee
- 2018 - 2021 : UW CSE Distinguished Lecture and Colloquia Organizer
- 2018 - 2019 : UW CSE Graduate Admissions Committee
- 2017 - 2018 : UW CSE BSMS Admissions Committee
- 2017 - 2018 : UW CSE Undergraduate Admissions Committee
- 2016 - 2017 : UW CSE BSMS Admissions Committee
- 2015 - 2016 : UW CSE Visit Days Organizing Committee
- 2013 - 2019 : UW CSE Grad Culture Chair
- 2009 - 2011 : UCSD GradCom Student Representative

I have also helped
  write, produce, and direct
  UW's annual faculty skit since 2015
  with Hank Levy and Adriana Schulz.


## Funding

- ComPort: Rigorous Testing Methods to Safeguard Software Porting \
  Co-PI; DOE; $405,000; 2021 – 2024

- V-SPELLS: POLYMORPH: Promotion to Optimal Languages Yielding Modular Operator-driven Replacements and Programmatic Hooks \
  Co-PI; DARPA; $746,365; 2021 – 2024

- FMitF: Retargetable, Verifiable, Optimizable Computer-Aided Manufacturing \
  Co-PI; NSF CCF-2017927; $749,913; 2020 – 2023

- RTML: Automatic Synthesis of HW/SW Systems for General Neural-Networks \
  Co-PI; DARPA; $2,803,490; 2019 – 2022

- Knit Pattern Understanding for Garment Modeling, Modification, and Fabrication \
  Co-PI; NSF CHS-1907337; $500,000; 2019 – 2021

- FMitF: Formal Verification of Accessibility \
  Co-PI; NSF CCF-1836813; $738,125; 2019 – 2022

- Programming Languages Foundations for 3D Printing \
  PI; NSF SHF-1813166; $500,000; 2018 – 2021

- Applications Driving Architectures (ADA) SRC JUMP Center \
  Co-PI; Joint SRC & DARPA; $580,000; 2018 – 2022

- CAREER: Verifying Distributed Systems Implementations \
  PI; NSF CCF-1749570; $550,000; 2018 – 2023

- BRASS: A Picture is Worth a Billion Bits: Adaptive Visualization of Big Data \
  Co-PI; DARPA; $7,500,000; 2015 – 2019

